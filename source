#include <iostream>
#include <vector>

std::vector<bool> dvoich(int a)
{
    std::vector<bool> temp_2;
    std::vector<bool> temp2;
    while(a >= 2)
    {
        if (a % 2)
        {
            temp_2.push_back(1);
        }
        else
        {
            temp_2.push_back(0);
        }
        a /= 2;
    }

    for(int i = 0; i < temp_2.size(); i++)
    {
        temp2[i] = temp_2[temp_2.size() - i - 1];
    }
    return temp2;
}

class shifr
{
public:
    std::string text;
    std::vector<bool> text_2;
    std::vector<bool> gamma;
    std::string c_text;

    shifr(): text("0"), c_text("0")
    {
        gamma.push_back(0);
        text_2.push_back(0);
    };

    shifr(std::string text1): text(text1)
    {
        std::vector<int> temp; // буквы в 10 видe
        std::vector<int> temp2; //
        for(int i = 0; i < text.size(); i++)
        {
            temp.push_back(int(text[i]));
        }

        for(int i = 0; i < temp.size(); i++)
        {
            temp2[i] = dvoich(temp[i]);
            for (int k = 0; k<temp2.size(); k++)
            {
                text_2.push_back(temp2[k]);
            }
        }

    };

    void print_c()
    {
        std::cout << text << " " << c_text << " ";
        for (int i = 0; i < gamma.size(); i++)
        {
            std::cout << gamma[i];
        }
        std::cout << std::endl;
        for (int i = 0; i < text_2.size(); i++)
        {
            std::cout << text_2[i];
            if (i%4==0) {std::cout << "      ";};
        }
    }
};

int main()
{
    shifr a("hello");
    a.print_c();
}
